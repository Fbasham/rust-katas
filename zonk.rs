use itertools::Itertools;

fn get_score(a: &[u8]) -> u16 {
    let d = a.iter().cloned().counts();
    let v = a.iter().counts().values().cloned().collect::<Vec<_>>();
    if a.iter().cloned().sorted().collect::<Vec<_>>() == vec![1, 2, 3, 4, 5, 6] {
        return 1000;
    }
    if v == vec![2, 2, 2] {
        return 750;
    }
    d.iter()
        .map(|t| match t {
            (1, 6) => 4000,
            (1, 5) => 3000,
            (1, 4) => 2000,
            (1, 3) => 1000,
            (2, 6) => 800,
            (2, 5) => 600,
            (2, 4) => 400,
            (2, 3) => 200,
            (3, 6) => 1200,
            (3, 5) => 900,
            (3, 4) => 600,
            (3, 3) => 300,
            (4, 6) => 1600,
            (4, 5) => 1200,
            (4, 4) => 800,
            (4, 3) => 400,
            (5, 6) => 2000,
            (5, 5) => 1500,
            (5, 4) => 1000,
            (5, 3) => 500,
            (6, 6) => 2400,
            (6, 5) => 1800,
            (6, 4) => 1200,
            (6, 3) => 600,
            (1, 2) => 200,
            (1, 1) => 100,
            (5, 2) => 100,
            (5, 1) => 50,
            _ => 0,
        })
        .sum()
}
